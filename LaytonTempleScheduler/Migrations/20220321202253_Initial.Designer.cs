// <auto-generated />
using System;
using LaytonTempleScheduler.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LaytonTempleScheduler.Migrations
{
    [DbContext(typeof(SchedulerContext))]
    [Migration("20220321202253_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.23");

            modelBuilder.Entity("LaytonTempleScheduler.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameOfGroup")
                        .HasColumnType("TEXT");

                    b.Property<int>("TimeSlotID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("emailAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("AppointmentID");

                    b.HasIndex("TimeSlotID");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("LaytonTempleScheduler.Models.TimeSlot", b =>
                {
                    b.Property<int>("TimeSlotID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Available")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.HasKey("TimeSlotID");

                    b.ToTable("TimeSlots");
                });

            modelBuilder.Entity("LaytonTempleScheduler.Models.Appointment", b =>
                {
                    b.HasOne("LaytonTempleScheduler.Models.TimeSlot", "TimeSlot")
                        .WithMany()
                        .HasForeignKey("TimeSlotID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
